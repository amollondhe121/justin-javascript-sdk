/*
 * Verbwire API documentation
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 1.0.0
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 3.0.34
 *
 * Do not edit the class manually.
 *
 */
import {ApiClient} from '../ApiClient';

/**
 * The Transaction model module.
 * @module model/Transaction
 * @version 1.0.0
 */
export class Transaction {
  /**
   * Constructs a new <code>Transaction</code>.
   * @alias module:model/Transaction
   * @class
   */
  constructor() {
  }

  /**
   * Constructs a <code>Transaction</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/Transaction} obj Optional instance to populate.
   * @return {module:model/Transaction} The populated <code>Transaction</code> instance.
   */
  static constructFromObject(data, obj) {
    if (data) {
      obj = obj || new Transaction();
      if (data.hasOwnProperty('blockNumber'))
        obj.blockNumber = ApiClient.convertToType(data['blockNumber'], 'String');
      if (data.hasOwnProperty('timeStamp'))
        obj.timeStamp = ApiClient.convertToType(data['timeStamp'], 'String');
      if (data.hasOwnProperty('hash'))
        obj.hash = ApiClient.convertToType(data['hash'], 'String');
      if (data.hasOwnProperty('nonce'))
        obj.nonce = ApiClient.convertToType(data['nonce'], 'String');
      if (data.hasOwnProperty('blockHash'))
        obj.blockHash = ApiClient.convertToType(data['blockHash'], 'String');
      if (data.hasOwnProperty('from'))
        obj.from = ApiClient.convertToType(data['from'], 'String');
      if (data.hasOwnProperty('contractAddress'))
        obj.contractAddress = ApiClient.convertToType(data['contractAddress'], 'String');
      if (data.hasOwnProperty('to'))
        obj.to = ApiClient.convertToType(data['to'], 'String');
      if (data.hasOwnProperty('tokenID'))
        obj.tokenID = ApiClient.convertToType(data['tokenID'], 'String');
      if (data.hasOwnProperty('tokenName'))
        obj.tokenName = ApiClient.convertToType(data['tokenName'], 'String');
      if (data.hasOwnProperty('tokenSymbol'))
        obj.tokenSymbol = ApiClient.convertToType(data['tokenSymbol'], 'String');
      if (data.hasOwnProperty('tokenDecimal'))
        obj.tokenDecimal = ApiClient.convertToType(data['tokenDecimal'], 'String');
      if (data.hasOwnProperty('transactionIndex'))
        obj.transactionIndex = ApiClient.convertToType(data['transactionIndex'], 'String');
      if (data.hasOwnProperty('gas'))
        obj.gas = ApiClient.convertToType(data['gas'], 'String');
      if (data.hasOwnProperty('gasPrice'))
        obj.gasPrice = ApiClient.convertToType(data['gasPrice'], 'String');
      if (data.hasOwnProperty('gasUsed'))
        obj.gasUsed = ApiClient.convertToType(data['gasUsed'], 'String');
      if (data.hasOwnProperty('cumulativeGasUsed'))
        obj.cumulativeGasUsed = ApiClient.convertToType(data['cumulativeGasUsed'], 'String');
      if (data.hasOwnProperty('input'))
        obj.input = ApiClient.convertToType(data['input'], 'String');
      if (data.hasOwnProperty('confirmations'))
        obj.confirmations = ApiClient.convertToType(data['confirmations'], 'String');
    }
    return obj;
  }
}

/**
 * @member {String} blockNumber
 */
Transaction.prototype.blockNumber = undefined;

/**
 * @member {String} timeStamp
 */
Transaction.prototype.timeStamp = undefined;

/**
 * @member {String} hash
 */
Transaction.prototype.hash = undefined;

/**
 * @member {String} nonce
 */
Transaction.prototype.nonce = undefined;

/**
 * @member {String} blockHash
 */
Transaction.prototype.blockHash = undefined;

/**
 * @member {String} from
 */
Transaction.prototype.from = undefined;

/**
 * @member {String} contractAddress
 */
Transaction.prototype.contractAddress = undefined;

/**
 * @member {String} to
 */
Transaction.prototype.to = undefined;

/**
 * @member {String} tokenID
 */
Transaction.prototype.tokenID = undefined;

/**
 * @member {String} tokenName
 */
Transaction.prototype.tokenName = undefined;

/**
 * @member {String} tokenSymbol
 */
Transaction.prototype.tokenSymbol = undefined;

/**
 * @member {String} tokenDecimal
 */
Transaction.prototype.tokenDecimal = undefined;

/**
 * @member {String} transactionIndex
 */
Transaction.prototype.transactionIndex = undefined;

/**
 * @member {String} gas
 */
Transaction.prototype.gas = undefined;

/**
 * @member {String} gasPrice
 */
Transaction.prototype.gasPrice = undefined;

/**
 * @member {String} gasUsed
 */
Transaction.prototype.gasUsed = undefined;

/**
 * @member {String} cumulativeGasUsed
 */
Transaction.prototype.cumulativeGasUsed = undefined;

/**
 * @member {String} input
 */
Transaction.prototype.input = undefined;

/**
 * @member {String} confirmations
 */
Transaction.prototype.confirmations = undefined;

