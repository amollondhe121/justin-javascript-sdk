/*
 * Verbwire API documentation
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 1.0.0
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 3.0.34
 *
 * Do not edit the class manually.
 *
 */
(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', '../../src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require('../../src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.VerbwireApiDocumentation);
  }
}(this, function(expect, VerbwireApiDocumentation) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new VerbwireApiDocumentation.MintApi();
  });

  describe('(package)', function() {
    describe('MintApi', function() {
      describe('nftMintCollectionReserveMintPost', function() {
        it('should call nftMintCollectionReserveMintPost successfully', function(done) {
          // TODO: uncomment, update parameter values for nftMintCollectionReserveMintPost call and complete the assertions
          /*

          instance.nftMintCollectionReserveMintPost(mintQty, contractAddress, recipientAddress, chain, function(error, data, response) {
            if (error) {
              done(error);
              return;
            }
            // TODO: update response assertions
            expect(data).to.be.a(VerbwireApiDocumentation.InlineResponse2016);

            done();
          });
          */
          // TODO: uncomment and complete method invocation above, then delete this line and the next:
          done();
        });
      });
      describe('nftMintCustomContractMintFromFilePost', function() {
        it('should call nftMintCustomContractMintFromFilePost successfully', function(done) {
          // TODO: uncomment, update parameter values for nftMintCustomContractMintFromFilePost call and complete the assertions
          /*

          instance.nftMintCustomContractMintFromFilePost(filePath, name, description, recipientAddress, contractAddress, chain, function(error, data, response) {
            if (error) {
              done(error);
              return;
            }
            // TODO: update response assertions
            expect(data).to.be.a(VerbwireApiDocumentation.InlineResponse2018);

            done();
          });
          */
          // TODO: uncomment and complete method invocation above, then delete this line and the next:
          done();
        });
      });
      describe('nftMintCustomContractMintFromMetadataUrlPost', function() {
        it('should call nftMintCustomContractMintFromMetadataUrlPost successfully', function(done) {
          // TODO: uncomment, update parameter values for nftMintCustomContractMintFromMetadataUrlPost call and complete the assertions
          /*

          instance.nftMintCustomContractMintFromMetadataUrlPost(metadataUrl, contractAddress, recipientAddress, chain, function(error, data, response) {
            if (error) {
              done(error);
              return;
            }
            // TODO: update response assertions
            expect(data).to.be.a(VerbwireApiDocumentation.InlineResponse2017);

            done();
          });
          */
          // TODO: uncomment and complete method invocation above, then delete this line and the next:
          done();
        });
      });
      describe('nftMintQuickMintFromFilePost', function() {
        it('should call nftMintQuickMintFromFilePost successfully', function(done) {
          // TODO: uncomment, update parameter values for nftMintQuickMintFromFilePost call and complete the assertions
          /*

          instance.nftMintQuickMintFromFilePost(filePath, name, description, recipientAddress, allowPlatformToOperateToken, chain, function(error, data, response) {
            if (error) {
              done(error);
              return;
            }
            // TODO: update response assertions
            expect(data).to.be.a(VerbwireApiDocumentation.InlineResponse2015);

            done();
          });
          */
          // TODO: uncomment and complete method invocation above, then delete this line and the next:
          done();
        });
      });
      describe('nftMintQuickMintFromMetadataUrlPost', function() {
        it('should call nftMintQuickMintFromMetadataUrlPost successfully', function(done) {
          // TODO: uncomment, update parameter values for nftMintQuickMintFromMetadataUrlPost call and complete the assertions
          /*

          instance.nftMintQuickMintFromMetadataUrlPost(metadataUrl, recipientAddress, allowPlatformToOperateToken, chain, function(error, data, response) {
            if (error) {
              done(error);
              return;
            }
            // TODO: update response assertions
            expect(data).to.be.a(VerbwireApiDocumentation.InlineResponse2012);

            done();
          });
          */
          // TODO: uncomment and complete method invocation above, then delete this line and the next:
          done();
        });
      });
    });
  });

}));
